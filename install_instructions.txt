Development:

    make docker-deploy

Deploy:

    sudo yum install make -y
    curl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -
    sudo yum install -y nodejs
    sudo python3 -m pip install uvicorn
    sudo pip install pydantic-settings
    sudo pip install fastapi
    sudo pip install -r requirements.txt

    sudo yum groupinstall "Development Tools" -y
    sudo yum install gcc openssl-devel bzip2-devel libffi-devel -y

    // tive que atualizar o python
    cd /usr/src
    sudo curl -O https://www.python.org/ftp/python/3.12.3/Python-3.12.3.tgz
    sudo tar xzf Python-3.12.3.tgz
    cd Python-3.12.3
    sudo ./configure --enable-optimizations
    sudo make altinstall

    // voltar o python pro 3.9
    sudo alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 1
    sudo alternatives --config python3
    python3 --version
    python3.12 --version
    dnf --version

    export PATH="$HOME/Library/Python/3.13/bin:$PATH"

    make install
    sudo make run

    sudo vi /etc/systemd/system/fastapi.service:
        [Unit]
        Description=FastAPI com Uvicorn
        After=network.target

        [Service]
        User=ec2-user
        WorkingDirectory=/home/ec2-user/py-app
        ExecStart=/usr/bin/python3 -m uvicorn app.main:app --host 0.0.0.0 --port 443 --ssl-keyfile /etc/pki/tls/private/server.key --ssl-certfile /etc/pki/tls/certs/server.crt
        Restart=always
        StandardOutput=journal
        StandardError=journal

        [Install]
        WantedBy=multi-user.target

    sudo systemctl daemon-reexec
    sudo systemctl daemon-reload
    sudo systemctl enable fastapi
    sudo systemctl start fastapi

    install views SQL

Sincronizar Contratos
    nohup java -cp .:jboss-dv-6.3.0-teiid-jdbc.jar:postgresql-42.7.2.jar CloneContratosToPostgres </dev/null &>/dev/null & disown


Sincronizar Financeiro
    javac -cp .:jboss-dv-6.3.0-teiid-jdbc.jar:postgresql-42.7.2.jar CloneFinanceiroToPostgres.java
    nohup java -cp .:jboss-dv-6.3.0-teiid-jdbc.jar:postgresql-42.7.2.jar CloneFinanceiroToPostgres & tail -f clone_financeiro.log
    pkill -f CloneFinanceiroToPostgres

    tail -f py-app/vdb/clone_financeiro.log 

    --

    nohup psql -U postgres -d financeiro -c "DELETE FROM WD_DOCUMENTO WHERE DT_CARGA_C >= '20201110';" </dev/null &>/dev/null & disown
    psql -U postgres -d financeiro -c "SELECT pid, query, state, wait_event FROM pg_stat_activity WHERE state != 'idle';"

    echo > clone_financeiro_table_size.log
    nohup bash reprocessar_datas_puladas.sh </dev/null &>/dev/null & disown
        

    pkill -f 'CloneFinanceiroTabelaData\|reprocessar_datas_puladas.sh\|flock -n /tmp/lock_reprocessar_datas.lock'
    rm -f /tmp/lock_reprocessar_datas.lock


